name: pillar

packages:
  - packages/**

command:
  bootstrap:
    # It seems so that running "pub get" in parallel has some issues (like
    # https://github.com/dart-lang/pub/issues/3404). Disabling this feature
    # makes the CI much more stable.
    runPubGetInParallel: false
    usePubspecOverrides: true

  clean:
    hooks:
      pre: melos exec -c 1 -- "flutter clean"

scripts:
  analyze:
    run: |
      melos exec -c 1 --fail-fast -- \
        dart analyze . --fatal-infos
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  build:all:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build apk"
    description: Build all example apps.
    select-package:
      dir-exists:
        - "android"

  test:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter test"
    description: Run `flutter test` for all packages.

  test:integration:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter test integration_test"
    description: Run all integration tests.

  format:
    run: |
      find . -name "*.dart" \
        ! -name "*.g.dart" \
        ! -name "*.freezed.dart" \
        ! -name "*.gr.dart" \
        ! -path "*/.*/*" \
        ! -path "*/.dart_tool/*" \
        ! -path "*/build/*" \
        | xargs dart format --set-exit-if-changed
    description: |
      Formats the code of all packages (Java, Objective-C, and Dart).
       - Requires `flutter_plugin_tools` (`pub global activate flutter_plugin_tools`).

  lint:all:
    run: |
      melos exec -c 1 --fail-fast -- \
        dart analyze . --fatal-infos
    description: |
      Run all static analysis checks.

  pub:get:
    run: |
      melos exec -c 6 --fail-fast -- \
        flutter pub get
    description: Run `flutter pub get` in all packages.

  pub:upgrade:
    run: |
      melos exec -c 6 --fail-fast -- \
        flutter pub upgrade
    description: Run `flutter pub upgrade` in all packages.

  build_runner:
    run: |
      melos exec -c 1 --fail-fast --depends-on="build_runner" -- \
        dart run build_runner build --delete-conflicting-outputs
    description: Run `build_runner` in all packages that depend on it.

  build_runner:watch:
    run: |
      melos exec -c 1 --fail-fast --depends-on="build_runner" -- \
        dart run build_runner watch --delete-conflicting-outputs
    description: Run `build_runner` in watch mode for all packages that depend on it.
